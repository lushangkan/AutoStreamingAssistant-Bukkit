plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm" version "1.9.21"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
//    id "io.freefair.aspectj.post-compile-weaving" version "8.4"
}

group = 'cn.cutemc'
version = '0.1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven { url = "https://lss233.littleservice.cn/repositories/minecraft" }
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "codemc-nms"
        url = "https://repo.codemc.io/repository/nms/"
    }
    maven {
        url "https://repo.essentialsx.net/releases"
    }
    maven { url = "https://libraries.minecraft.net" }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

dependencies {
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    compileOnly 'org.spigotmc:spigot:1.20.4-R0.1-20231209.212706-3'
    compileOnly 'org.spigotmc:spigot:1.20.4-R0.1-20231209.212706-3:sources'
    implementation 'org.bstats:bstats-bukkit:3.0.2'

    implementation 'commons-io:commons-io:2.15.0'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.16.0'

    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'

    compileOnly "net.essentialsx:EssentialsX:2.19.0"

    // Download from https://github.com/Zrips/CMI-API/releases/tag/
    compileOnly files("libs/CMI-API9.6.5.0.jar")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

test {
    useJUnitPlatform()
}

shadowJar {
    relocate 'org.bstats', 'cn.cutemc.autostreamingassistant.bukkit'
}

kotlin {
    jvmToolchain(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

